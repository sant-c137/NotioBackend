# Generated by Django 5.1.4 on 2024-12-09 19:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("tag_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "Tag",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                ("note_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("creation_date", models.DateTimeField()),
                ("last_modification", models.DateTimeField()),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Note",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                ("session_id", models.AutoField(primary_key=True, serialize=False)),
                ("session_token", models.CharField(max_length=255, unique=True)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Session",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="SharedNotes",
            fields=[
                ("shared_note_id", models.AutoField(primary_key=True, serialize=False)),
                ("sharing_date", models.DateTimeField()),
                ("permission", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "note",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Notio.note"
                    ),
                ),
                (
                    "shared_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Shared_notes",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="NoteTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "note",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Notio.note"
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Notio.tag"
                    ),
                ),
            ],
            options={
                "db_table": "Note_Tag",
                "managed": True,
                "unique_together": {("note", "tag")},
            },
        ),
    ]
